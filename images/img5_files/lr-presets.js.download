movelr_priset = (c) => {
  var ap = 8,
    aptime = 100,
    l1px = "-=" + ap + "px",
    l2px = "+=" + (2 * ap) + "px",
    l3px = "-=" + ap + "px",
    aptime1 = aptime,
    aptime2 = 2 * aptime,
    aptime3 = aptime,
    left = parseInt(c.css('left'), 10);

  c.animate({"left": l1px}, aptime1).animate({"left": l2px}, aptime2).animate({"left": l3px}, aptime3);
}

sliderObj = function() {

  this.init = ($el) => {

    this.$el = $el
    this.imgs = $el.find('div.lrp-pics img')
    this.cimg_cnt = this.imgs.length
    this.cimg = 0

    if (this.cimg_cnt < 2) {
      $el.find('div.lrp-pics').hide();
    }

    $($el).find('div.lrp-pics img').on("click", function(e){
      this.sliderGo(e)
    }.bind(this))

    var images = this.imgs.length
    if (images){
      this.timer = setInterval(this.auto.bind(this), 15000);
      for (var n=0; n<images; n++){
        $(this.imgs[n]).attr('data-n',n)
      }
      this.navAdded = 0
      if (this.cimg_cnt > 1) {
        this.addNav()
      }
    }
  }

  this.addNav = (i) => {
    if (this.navAdded > 1) return
    var addToEl = this.navAdded > 0 ? "div.twentytwenty-overlay" : "div.lrp-pic"
    if (this.$el.find(addToEl).length){
      this.navAdded = addToEl == "div.lrp-pic" ? 1 : 2
      this.$el.find("div.lrp-nav").remove()
      $('<div class="lrp-nav lrp-prev"></div>').
        appendTo(this.$el.find(addToEl)).
        on("click", function(){
          this.run(0)
        }.bind(this))
      $('<div class="lrp-nav lrp-next"></div>').
        appendTo(this.$el.find(addToEl)).
        on("click", this.run.bind(this))
    }
    setTimeout( this.addNav.bind(this),500);
  }

  this.sliderGo = (e) => {

    var $el = $(e.currentTarget),
      src = $el.data('big'),
      src2 = $el.data('after'),
      $lrp = this.$el,
      $icon = $lrp.find("div.lrp-pic img.lrp-icon"),
      $imgs = $lrp.find("div.lrp-pic div img"),
      $p1 = $lrp.find("div.lrp-pic div img.pic1"),
      $pics = $lrp.find('div.lrp-pics'),
      icon = parseInt($el.data('icon')),
      iconFile = 'fix-the-photo.png',
      youtube = $el.data('youtube'),
      $youtube = $lrp.find('div.youtube-responsive')

      if (icon == 1) iconFile = 'free-tools-paid.png'
      if (icon == 2) iconFile = 'free-tools-presets.png'

    $pics.animate({scrollLeft : $el.data('n')*121 - $pics.width()/2 + 56 }, 500)

    this.imgs.css({opacity:".5"})
    $el.css({opacity:"1"})

    $.when($lrp.find(".ttcontainer").fadeOut()).done(function () {
      $imgs.attr('src', src2)
      $p1.attr('src', src)

      if ($youtube.length) {
        $youtube.remove()
      }

      $lrp.find('div.youtube-responsive').remove();
      if ( youtube ){
        var youtubeHtml =
          '<div class="youtube-responsive" style="position:absolute;top:0;left:0;bottom:0;height:auto;width:100%">' +
            '<iframe frameborder="0" src="https://www.youtube.com/embed/'+youtube+'?'+'autoplay=0&amp;rel=0&amp;controls=1" ' +
            ' allow="encrypted-media;" allowfullscreen="" /></iframe>' +
          '</div>'
        $lrp.find("div.lrp-pic").append(youtubeHtml)
        $imgs.css({opacity:"0"})
      }else{
        $imgs.css({opacity:"1"})
      }
      $icon.attr('src', "/images/" + iconFile)
      if (src2 == null) {
        $lrp.find('.ttcontainer').addClass('ttcontainer_one')
      }
      $.when($lrp.find(".ttcontainer").fadeIn()).done(function () {
        if (src2 == null) {
          $lrp.find('.ttcontainer').addClass('ttcontainer_one')
        } else {
          $lrp.find('.ttcontainer').removeClass('ttcontainer_one')
        }
      })
      setTimeout(function(){
        movelr_priset($lrp.find(".twentytwenty-handle"))
        $(window).trigger("resize.twentytwenty")
      }.bind(this),500)

      setTimeout(function(){
        movelr_priset($lrp.find(".twentytwenty-handle"))
      }.bind(this),3500)
    })
    this.cimg = this.imgs.index($el)
    clearInterval(this.timer)
    this.timer = setInterval(this.auto.bind(this), 15000)
  }

  this.isVisibled = () => {

    var next = true,
        reason

    if (document.hidden){
      reason = 'tab inactive'
      next = false
    }else if(!isWindowActive){
      reason = 'window not active'
      next = false
    }else if(!isOnScreen(this.$el.find('div.twentytwenty-overlay'))){
      reason = 'gallery not visible'
      next = false
    }
    return next
  }

  this.auto = ()  => {
    if ( this.isVisibled() ){
      this.run()
    }else{
      clearInterval(this.timer)
      this.timer = setInterval(this.autoAfterNotVisible.bind(this), 3000)
    }
  }

  this.autoAfterNotVisible = ()  => {
    if ( this.isVisibled() ){
      clearInterval(this.timer)
      this.timer = setInterval(this.auto.bind(this), 12000)
    }else{
      clearInterval(this.timer)
      this.timer = setInterval(this.autoAfterNotVisible.bind(this), 3000)
    }
  }

  this.run = (next = 1)  => {
    if (next) this.cimg++
    else this.cimg--
    if (this.cimg < 0) this.cimg = this.cimg_cnt-1
    if (this.cimg == this.cimg_cnt) this.cimg = 0
    this.sliderGo({currentTarget:$(this.imgs[this.cimg])})
  }
}

scrollTimeout = null;
scrollTimeoutLast = false;
scrollTimeoutGalleryToScreenMover = null;
$(window).scroll( () => {
  if (scrollTimeout) clearTimeout(scrollTimeout)
  scrollTimeout = setTimeout( () => {
    var c = jQuery(".twentytwenty-handle")
    if (!scrollTimeoutLast){
      movelr_priset(c)
      scrollTimeoutLast = true
      setTimeout( () => {
        scrollTimeoutLast = false
      }, 3000);

    }

  }, 250)

  if (scrollTimeoutGalleryToScreenMover) clearTimeout(scrollTimeoutGalleryToScreenMover)
  scrollTimeoutGalleryToScreenMover = setTimeout( () => {
    galleryToScreenMover()
  }, 100)
})

galleryToScreenMoverPrevPos = $(window).scrollTop();
galleryToScreenMover = () => {
  return; // disabled scroll gallery to screen
  var currentPos = $(window).scrollTop(),
      prevPos = galleryToScreenMoverPrevPos
  galleryToScreenMoverPrevPos = currentPos
  if (currentPos < prevPos) {
    return
  }
  galleryToScreenMoverPrevPos = currentPos
  if (!window.$lrpGaleries){
    $lrpGaleries = $(".lrp-gallery")
  }
  var count = $lrpGaleries.length

  if (count) for (var n = 0; n < count; n++){
    if ( isOnScreen($($lrpGaleries[n]),40) ){
      var galleryTop = $($lrpGaleries[n]).offset().top
      if ( !isOnScreen($($lrpGaleries[n]),0) && currentPos < galleryTop ) {
        $('html,body').animate({ scrollTop: galleryTop - 75 }, 300);
      }
      return
    }
  }

}

$(window).on("resize", () => {
  lrpSliderCorrectHeight()
})

var lrpSliderCorrectHeightTimer;
 lrpSliderCorrectHeight = () => {
   lrpSliderCorrectHeightDo();

  //clearInterval(lrpSliderCorrectHeightTimer)
  //lrpSliderCorrectHeightTimer = setInterval(lrpSliderCorrectHeightDo, 50)
}

lrpSliderCorrectHeightDo = ($in = $("body")) => {
  var ww = $(window).width(),
      isBlog = $('body#blog').length,
      lrpBoxWidth = 256,
      lrpBoxCssDefault = {
        'margin-left': 'inherit'
      },
      lrpBoxCssNew = {
        //float: 'right',
        //'margin-left': '20px'
      },
      $lrpBoxes = $in.find("div.lrp-box"),
      $tools = $("body").find("div.tools"),
      toolsCssDefault = {
        width : 'inherit',
        margin: "0 auto"
      },
      wh = $(window).height(),
      header = isBlog ? 0 : 63,
      pics = 133,
      galleryMax = 627,
      $elGalleryes = $in.find("div.lrp").find("div.lrp-gallery"),
      $elContainers = $in.find("div.lrp").find("div.ttcontainer"),
      maxWidth = isBlog ? 520 : 712

  if (isBlog) return

  if (ww > 1024){

    if ( (header + pics + galleryMax) > wh ){
      var newh = wh - header - pics
      var neww = newh * 3/2
      if ( !$("#wrapper").hasClass("wrapper_width_type_1") ){
        neww = neww > maxWidth ? maxWidth : neww
      }
      if(isBlog && ww < 1200){
        //neww = 500;
      }
      $elContainers.height(newh)
      $elContainers.css({"max-width": neww+"px"})
      $elGalleryes.css({"max-width": neww+"px"})
      $lrpBoxes.css(lrpBoxCssNew)
      if($tools.length){
        $tools.css({
          width : neww + lrpBoxWidth + "px",
          margin: "0 auto"
        })
      }
    }else{
      $elContainers.height(galleryMax)
      var neww = galleryMax * 3/2
      if ( !$("#wrapper").hasClass("wrapper_width_type_1") ){
        neww = neww > maxWidth ? maxWidth : neww
      }
      //$(".ttcontainer ").css('max-width',  image_w + "px");
      if(isBlog){
        if( ww < 1200){
          neww = 460;
        }else{
          neww = 520;
        }
      }else{
          $lrpBoxes.css(lrpBoxCssDefault)
          if($tools.length) $tools.css(toolsCssDefault)
      }
      $elContainers.css({"max-width": neww + "px"})
      $elGalleryes.css({"max-width": neww+"px"})
    }
  }else{
    if(isBlog){
      if( ww > 768 ){
        var neww = ww - 56 - 380
        $elContainers.css({"max-width": neww + "px"})
        $elGalleryes.css({"max-width": neww + "px"})
      }else{
        var neww = ww - 56
        $elContainers.css({"max-width": neww + "px"})
        $elGalleryes.css({"max-width": neww + "px"})
      }
    }else{
      $lrpBoxes.css(lrpBoxCssDefault)
      $tools.css(toolsCssDefault)
    }
  }

  setTimeout(() => {
    $(window).trigger("resize.twentytwenty")
  },100)

  setTimeout(() => {
    $("body div.lrp").css({opacity:1})
  },200)


  clearInterval(lrpSliderCorrectHeightTimer)

}

function correctLrpsHeight(){
  if (window.$allLrpGalleries){
    //console.log("correctLrpsHeight" ,   $allLrpGalleries)
    for ( var n=0; n<$allLrpGalleries.length; n++){
       var $lrp = $($allLrpGalleries[n]);
       if ($lrp.height()){
         //console.log("Correct height this:",$lrp)
         if ( $(window).width() < 768){
          var imHeight = $( $lrp.find(".ttcontainer img")[0] ).height();
           //console.log ($lrp.height(), imHeight)
           if (imHeight>0){
               //console.log ("correct height to " + imHeight)
               $lrp.find(".ttcontainer").css({"min-height" : imHeight+"px"})
           }
         }
       }
    }
  }
}

$(window).ready( () => {
    $lrps = $(".lrp")
    if ($lrps.length){
        for (var i = 0 ; i < $lrps.length; i++){
            var slider = new sliderObj()
            slider.init( $( $lrps[i]) )
        }
    }
    lrpSliderCorrectHeight()
})

$(document).ready( function(){
  $allLrpGalleries = $("div.lrp");
  for (var i=1; i < 4; i++)
    setTimeout(function(){
      correctLrpsHeight()
    },i*1000+324);
})

$(window).on("resize",correctLrpsHeight);
